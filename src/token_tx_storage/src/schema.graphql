Type RateWithLowestLimit{
   lowest: Int!
   rate: Int!
}

type Fee {
   fixed:Int
   rate:Int
   rateWithLowestLimit:[RateWithLowestLimit]
}

Type KeyValuePair{
   k: String!
   v: String!
}

type Tokens {
    logo: String!
    name: String!
    symbol: String!
    decimals: Int!
    total_supply: Int!
    fee: Fee!
    extend:[KeyValuePair]
}

type InitRecord{
    owner: String!
    decimals: Int!
    total_supply: String!
}

type TransferRecord {
    from: String!
    to: String!
    value: Int!
    fee: Int!
}

type BurnRecord {
    from: String!
    value: Int!
}

union Record= InitRecord|TransferRecord|BurnRecord

type TxRecord{
    caller: String!
    tx:Record!
    timestamp: Int!
}